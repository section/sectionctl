on: [push]

jobs:
  create_installer:
    runs-on: 'ubuntu-20.04'
    name: ðŸš§ Create Windows Installer Binary
    strategy:
      matrix:
        GOOS: [windows]
        GOARCH: [amd64]
    env:
      VERSION: ${{ github.ref }}
      GOARCH: ${{ matrix.GOARCH }}
      GOOS: ${{ matrix.GOOS }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get Version
        id: get_version
        uses: battila7/get-version-action@v2
      - run: echo "MAJORVERSION=${{ steps.get_version.outputs.major }}" >> $GITHUB_ENV
      - run: echo "MINORVERSION=${{ steps.get_version.outputs.minor }}" >> $GITHUB_ENV
      - run: echo "PATCHVERSION=${{ steps.get_version.outputs.patch }}" >> $GITHUB_ENV
      - run: echo "VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: make build-release

      - uses: actions/upload-artifact@v2
        with:
          name: sectionctl-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}.exe
          path: dist/sectionctl-${{ env.VERSION }}-${{ env.GOOS }}-${{ env.GOARCH }}

      - name: 'Install makensis (apt)'
        run: sudo apt update && sudo apt install -y nsis nsis-pluginapi

      - name: Download EnVar plugin for NSIS
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip
          file-name: envar_plugin.zip
          location: ${{ github.workspace }}
        # if: ${{ matrix.GOOS == 'windows' }}

      - name: Extract EnVar plugin
        run: 7z x -o"${{ github.workspace }}/NSIS_Plugins" "${{ github.workspace }}/envar_plugin.zip"
        # if: ${{ matrix.GOOS == 'windows' }}

      - name: 'Set Plugin permissions'
        run: sudo chown -R $(whoami) /usr/share/nsis/Plugins/
        # if: ${{matrix.GOOS == 'windows' }}

      - name: Create nsis installer
        uses: joncloud/makensis-action@v3.3
        with:
          additional-plugin-paths: ${{ github.workspace }}/NSIS_Plugins/Plugins
          arguments: '-DOUTPUTFILE=sectionctl-${{ env.VERSION }}-amd64.exe -DSECTIONCTL_VERSION=${{ env.VERSION }} -DMAJORVERSION=${{ env.MAJORVERSION }} -DMINORVERSION=${{ env.MINORVERSION }} -DBUILDVERSION=${{ env.PATCHVERSION }}'
          script-file: 'packaging/windows/nsis.sectionctl.nsi'
        # if: ${{matrix.GOOS == 'windows' }}
      - run: ls
      - run: ls dist/
      - run: ls packaging/windows/

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: sectionctl-${{ env.VERSION }}-amd64.exe
          path: packaging/windows/sectionctl-${{ env.VERSION }}-amd64.exe
        # if: ${{matrix.GOOS == 'windows' }}

      # - name: Upload Installer Asset
      #   id: upload-installer-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.release.outputs.release_upload_url }}
      #     asset_path: dist/sectionctl-${{ env.VERSION }}-amd64.exe
      #     asset_name: sectionctl-${{ env.VERSION }}-amd64.exe
      #     asset_content_type: application/octet-stream
      #   if: ${{matrix.GOOS == 'windows' }}
